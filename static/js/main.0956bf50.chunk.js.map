{"version":3,"sources":["components/CodeBlock.js","components/MarkdownView.js","components/DrawerMenuItem.js","components/DrawerMenu.js","components/markdownFilesToLoad.js","components/MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","button","margin","spacing","unit","input","display","buttonShow","code_content","showLineNumbers","children","props","undefined","className","variant","size","style","marginBottom","color","onClick","e","enqueueSnackbar","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","split","length","language","atomOneLight","wrapLongLines","codeTagProps","fontFamily","MarkdownView","CodeBlock","bind","options","overrides","h1","component","gutterBottom","classes","STdarkBlue","this","h2","h3","h4","paragraph","p","a","Link","li","STlightBlue","code","pre","img","alt","src","process","mdInfo","mdPath","replace","title","padding","boxShadow","maxWidth","container","justify","item","mdContent","Component","DrawerMenuItem","state","expand","itemNested","depth","paddingLeft","completeItem","type","subFolder","map","key","name","selectCb","setState","inset","primary","disableTypography","Folder","in","timeout","unmountOnExit","disablePadding","File","fontWeight","withTheme","DrawerMenu","classesToUse","listToShow","menuItems","listCore","drawer","paper","drawerPaper","anchor","toolbar","filesToLoadArr","path","file","menuStructure","MainScreen","mdFilesContent","mdSelected","itemSelectedCb","requests","fetch","then","response","text","preparedContent","push","Promise","all","itemName","MyMarkdownView","withSnackbar","mdFileToShow","showDrawer","showMd","find","mdFileContent","root","position","appBar","content","maxSnack","width","flexShrink","marginLeft","flexGrow","mixins","nested","createMuiTheme","typography","useNextVariants","join","palette","blue","secondary","pink","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0956bf50.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Button, Divider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { atomOneLight } from 'react-syntax-highlighter/dist/styles/hljs';\r\n\r\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\n// import { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  }\r\n});\r\n\r\nfunction CodeBlock({ children, ...props }) {\r\n  // const { classes } = props;\r\n  /*copy the clipboard */\r\n  function copyToClipBoard(e) {\r\n    props.enqueueSnackbar('Code is now in your clipboard', { variant: 'info' });\r\n    const el = document.createElement('textarea');\r\n    el.value = children;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n  };\r\n  let buttonShow;\r\n  if (props.className !== undefined) {\r\n    buttonShow = (\r\n      <div>\r\n        <Button variant=\"contained\" size=\"small\" style={{ marginBottom: 12 }} color=\"primary\" onClick={copyToClipBoard}>\r\n          Copy code\r\n    </Button>\r\n      </div>);\r\n  } else {\r\n    buttonShow = [];\r\n  }\r\n  let code_content;\r\n  if (props.className === \"lang-c\") {\r\n    let codeLines = children.split(/\\r\\n|\\r|\\n/).length;\r\n    let showLineNumbers;\r\n    if (codeLines === 1) {\r\n      showLineNumbers = false;\r\n    } else {\r\n      showLineNumbers = true;\r\n    }\r\n    code_content = (\r\n      <div>\r\n        <Divider />\r\n        <div>\r\n          <SyntaxHighlighter language=\"cs\" style={atomOneLight} showLineNumbers={showLineNumbers} wrapLongLines={true} codeTagProps={{ style: { fontFamily: 'inherit' } }}>\r\n            {/* <SyntaxHighlighter language=\"cpp\" style={prism} showLineNumbers=\"true\" codeTagProps={{style: {fontFamily: 'inherit'} }}> */}\r\n            {children}\r\n          </SyntaxHighlighter>\r\n        </div>\r\n        {buttonShow}\r\n        <Divider />\r\n      </div>\r\n    );\r\n  } else {\r\n    code_content = (\r\n      <i>\r\n\r\n        <code>\r\n          {children}\r\n        </code>\r\n      </i>\r\n    );\r\n  }\r\n\r\n  return code_content;\r\n}\r\n\r\nexport default withStyles(styles)(CodeBlock);\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport CodeBlock from './CodeBlock';\r\n// import Box from '@material-ui/core/Box';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = (theme) => ({\r\n  STdarkBlue: {\r\n    color: '#002052'\r\n  },\r\n  STlightBlue: {\r\n    color: '#39A9DC'\r\n  }\r\n});\r\n\r\n\r\nexport class MarkdownView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    CodeBlock.bind(this.props);\r\n  }\r\n\r\n  render() {\r\n    // const { classes } = this.props;\r\n    const options = {\r\n      overrides: {\r\n        h1: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"h4\" className={props.classes.STdarkBlue}> {children}  </Typography>), props: { classes: this.props.classes } },\r\n        h2: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"h6\" className={props.classes.STdarkBlue}> {children}</Typography>), props: { classes: this.props.classes } },\r\n        h3: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"subtitle1\" className={props.classes.STdarkBlue}> {children}</Typography>), props: { classes: this.props.classes } },\r\n        h4: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"caption\" paragraph className={props.classes.STdarkBlue}> {children}</Typography>), props: { classes: this.props.classes } },\r\n        p: { component: ({ children, ...props }) => (<Typography paragraph className={props.classes.STdarkBlue}>{children} </Typography>), props: { classes: this.props.classes } },\r\n        a: { component: Link },\r\n        li: {\r\n          component: ({ children, ...props }) => {\r\n            return (\r\n              <li className={props.classes.STlightBlue}>\r\n                <Typography component=\"span\" className={props.classes.STdarkBlue}>{children}</Typography>\r\n              </li>\r\n            );\r\n          }\r\n          , props: { classes: this.props.classes }\r\n        },\r\n        code: {\r\n          component: CodeBlock,\r\n          props: { enqueueSnackbar: this.props.enqueueSnackbar }\r\n        },\r\n        pre: { component: ({ children, ...props }) => (<Fragment>{children}</Fragment>) },\r\n        img: {\r\n          component: ({ children, ...props }) => {\r\n            return (<Fragment><img alt={props.alt} src={process.env.PUBLIC_URL + this.props.mdInfo.mdPath + \"/img/\" + props.src.replace('./img/', '')} title={props.title} style={{ padding: 24, boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)', maxWidth: '100%' }}></img></Fragment>)\r\n\r\n          }\r\n        }\r\n      },\r\n    };\r\n    return (\r\n      // <Box width={1}> \r\n      <Grid container justify=\"center\" spacing={0} style={{ padding: 24 }}>\r\n        <Grid item>\r\n          <ReactMarkdown children={this.props.mdInfo.mdContent} options={options} />\r\n        </Grid>\r\n      </Grid>\r\n      //  </Box> \r\n    );\r\n  }\r\n}\r\n\r\nMarkdownView.propTypes = {\r\n  enqueueSnackbar: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n// export default withStyles(styles)(MarkdownView);\r\nexport default withStyles(styles)(MarkdownView);","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem, ListItemText, Collapse, List } from '@material-ui/core';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  Folder: {\r\n    color: '#002052',\r\n    fontWeight: 'bold'\r\n  },\r\n  File: {\r\n    color: '#002052',\r\n    fontWeight: '500'\r\n  }\r\n});\r\n\r\nexport class DrawerMenuItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { expand: false };\r\n  }\r\n\r\n  render() {\r\n    const { theme, classes } = this.props;\r\n    let item = this.props.item;\r\n    // let shortName = item.name.replace(/\\s/g, '');\r\n    let itemNested = {};\r\n    if (this.props.depth > 0) {\r\n      // console.log(this.props.classesToUse);\r\n      // itemNested = this.props.classesToUse.nested;\r\n      let leftPadding = theme.spacing.unit * 4 * this.props.depth;\r\n      itemNested = { paddingLeft: leftPadding };\r\n    }\r\n    let completeItem = {};\r\n    if (item.type === 'Folder') {\r\n      /*folder */\r\n      let subFolder = item.children.map((value) => <DrawerMenuItem key={value.name} item={value} depth={this.props.depth + 1} selectCb={this.props.selectCb} theme={theme} classes={classes} />);\r\n      let folderItem = (\r\n        <Fragment>\r\n          <ListItem button style={itemNested} onClick={(e) => this.setState({ expand: !this.state.expand })} >\r\n            <ListItemText inset primary={item.name} disableTypography className={classes.Folder} />\r\n            {this.state.expand ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={this.state.expand} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {subFolder}\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      );\r\n      completeItem = folderItem;\r\n    } else if (item.type === 'File') {\r\n      /*file */\r\n      let fileItem = (\r\n        <ListItem button style={itemNested} onClick={(e) => this.props.selectCb(item.name)}>\r\n          <ListItemText disableTypography inset primary={item.name} className={classes.File} />\r\n        </ListItem>\r\n      );\r\n      completeItem = fileItem;\r\n    } else {\r\n      // console.log('Not defined item')\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {completeItem}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nDrawerMenuItem.propTypes = {\r\n  // classes: PropTypes.array.isRequired,\r\n  selectCb: PropTypes.func.isRequired,\r\n  depth: PropTypes.number.isRequired,\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(DrawerMenuItem);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Drawer, List, Divider, ListSubheader, } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DrawerMenuItem from './DrawerMenuItem';\r\n// import {MenuIcon,InboxIcon,MailIcon} from '@material-ui/icons';\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nexport class DrawerMenu extends Component {\r\n\r\n  render() {\r\n    const classes = this.props.classesToUse;\r\n\r\n    let listToShow = this.props.menuItems.map((value) => (<DrawerMenuItem key={value.name} item={value} depth={0} selectCb={this.props.selectCb} classesToUse={this.props.classesToUse}/>));\r\n\r\n    let listCore = (\r\n      <List\r\n        component=\"nav\"\r\n        // subheader={<ListSubheader component=\"div\">Nested List Items</ListSubheader>}\r\n      >\r\n        {listToShow}\r\n      </List>\r\n    );\r\n    return (\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        {listCore}\r\n      </Drawer>\r\n    )\r\n  }\r\n}\r\nDrawerMenu.propTypes = {\r\n  selectCb: PropTypes.func.isRequired,\r\n  classesToUse: PropTypes.object.isRequired,\r\n  menuItems:PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(DrawerMenu);\r\n","export const filesToLoadArr = [\r\n    {\r\n        name: '1. Add ThreadX',\r\n        path: '/markdown',\r\n        file: 'add_threadx.md',\r\n    },\r\n    {\r\n        name: '2. Add TraceX',\r\n        path: '/markdown',\r\n        file: 'adding_tracex.md',\r\n    },\r\n    {\r\n        name: '3. ThreadX basic',\r\n        path: '/markdown',\r\n        file: 'threadx_basic stucture_flow.md',\r\n    },\r\n    {\r\n        name: '4. ThreadX memory',\r\n        path: '/markdown',\r\n        file: 'threadx_memory_allocation.md',\r\n    },\r\n    {\r\n        name: '5. Memory pools',\r\n        path: '/markdown',\r\n        file: 'threadx_memory_pools.md',\r\n    },\r\n    {\r\n        name: '6. Threads',\r\n        path: '/markdown',\r\n        file: 'thredx_thread.md',\r\n    },\r\n    {\r\n        name: '7. Semaphore',\r\n        path: '/markdown',\r\n        file: 'thredx_semaphore.md',\r\n    },\r\n    {\r\n        name: '8. Mutex',\r\n        path: '/markdown',\r\n        file: 'thredx_mutex.md',\r\n    },\r\n    {\r\n        name: '9. Queue',\r\n        path: '/markdown',\r\n        file: 'thredx_queue.md',\r\n    },\r\n    {\r\n        name: '10. Event flags',\r\n        path: '/markdown',\r\n        file: 'thredx_events.md',\r\n    },\r\n    {\r\n        name: '11. Timer',\r\n        path: '/markdown',\r\n        file: 'threadx_timer.md',\r\n    }\r\n];\r\n\r\nexport const menuStructure =\r\n    [\r\n        {\r\n            type: 'File',\r\n            name: '1. Add ThreadX',\r\n            path: '/markdown',\r\n            file: 'add_threadx.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '2. Add TraceX',\r\n            path: '/markdown',\r\n            file: 'adding_tracex.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '3. ThreadX basic',\r\n            path: '/markdown',\r\n            file: 'threadx_basic stucture_flow.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '4. ThreadX memory',\r\n            path: '/markdown',\r\n            file: 'threadx_memory_allocation.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '5. Memory pools',\r\n            path: '/markdown',\r\n            file: 'threadx_memory_pools.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '6. Threads',\r\n            path: '/markdown',\r\n            file: 'thredx_thread.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '7. Semaphore',\r\n            path: '/markdown',\r\n            file: 'thredx_semaphore.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '8. Mutex',\r\n            path: '/markdown',\r\n            file: 'thredx_mutex.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '9. Queue',\r\n            path: '/markdown',\r\n            file: 'thredx_queue.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '10. Event flags',\r\n            path: '/markdown',\r\n            file: 'thredx_events.md',\r\n        },\r\n        {\r\n            type: 'File',\r\n            name: '11. Timer',\r\n            path: '/markdown',\r\n            file: 'threadx_timer.md',\r\n        }\r\n    ];\r\n\r\n// export const menuStructure =\r\n//     [\r\n//         {\r\n//             type: 'File',\r\n//             name: 'QSPI'\r\n//         },\r\n//         {\r\n//             type: 'Folder',\r\n//             name: 'CubeMX basics',\r\n//             children:\r\n//                 [\r\n//                     {\r\n//                         type: 'File',\r\n//                         name: 'CubeMX Import'\r\n//                     }\r\n//                 ]\r\n//         },\r\n//         {\r\n//             type: 'File',\r\n//             name: 'About CubeMX'\r\n\r\n//         },\r\n//         {\r\n//             type: 'Folder',\r\n//             name: 'CubeMX More Folders',\r\n//             children:\r\n//                 [\r\n//                     {\r\n//                         type: 'File',\r\n//                         name: 'CubeMX Import'\r\n//                     },\r\n//                     {\r\n//                         type: 'Folder',\r\n//                         name: 'Nested',\r\n//                         children:\r\n//                             [\r\n//                                 {\r\n//                                     type: 'File',\r\n//                                     name: 'Nested item'\r\n//                                 },\r\n//                                 {\r\n//                                     type: 'Folder',\r\n//                                     name: 'Nested more nested',\r\n//                                     children:\r\n//                                         [\r\n//                                             {\r\n//                                                 type: 'File',\r\n//                                                 name: 'More nested item'\r\n//                                             },\r\n//                                             {\r\n//                                                 type: 'File',\r\n//                                                 name: 'QSPI'\r\n//                                             }\r\n//                                         ]\r\n//                                 }\r\n//                             ]\r\n//                     }\r\n//                 ]\r\n//         }\r\n//     ];","import React, { Component } from 'react';\r\n\r\nimport MarkdownView from './MarkdownView';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { SnackbarProvider, withSnackbar } from 'notistack';\r\nimport DrawerMenu from './DrawerMenu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { filesToLoadArr, menuStructure } from './markdownFilesToLoad';\r\n\r\n//develop\r\n// import mdDevelop from '%PUBLIC_URL%/markdown/CubeMXImport.md';\r\n\r\n// var mdContent =[];\r\nconst drawerWidth = 320;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  nested: {\r\n    paddingLeft: theme.spacing.unit * 4\r\n  }\r\n});\r\n\r\nclass MainScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mdFilesContent: [],\r\n      mdSelected: \"\",\r\n    };\r\n    this.itemSelectedCb = this.itemSelectedCb.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    var mdFilesContent = [];\r\n\r\n    let requests = filesToLoadArr.map(value => {\r\n      return fetch(process.env.PUBLIC_URL + value.path + \"/\" + value.file).then((response) => response.text()).then((text) => {\r\n        let preparedContent = { name: value.name, mdContent: text, mdPath: value.path }\r\n        mdFilesContent.push(preparedContent);\r\n\r\n      });\r\n    });\r\n\r\n    Promise.all(requests).then(() => {\r\n      this.setState({ mdFilesContent: mdFilesContent });\r\n    });\r\n\r\n  }\r\n  itemSelectedCb(itemName) {\r\n    this.setState({ mdSelected: itemName });\r\n  }\r\n  render() {\r\n    const MyMarkdownView = withSnackbar(MarkdownView);\r\n    const { classes } = this.props;\r\n\r\n    /* md files */\r\n    let mdFileToShow = {};\r\n    let showDrawer = [];\r\n    let showMd = [];\r\n    if (this.state.mdFilesContent.length === 0) {\r\n      mdFileToShow.name = \"Loading\";\r\n      mdFileToShow.mdContent = \"\";\r\n      mdFileToShow.mdPath = \"\";\r\n    }\r\n    else if (this.state.mdFilesContent.length === 1) {\r\n      mdFileToShow = this.state.mdFilesContent[0];\r\n      showDrawer.push(<DrawerMenu classesToUse={classes} menuItems={menuStructure} selectCb={this.itemSelectedCb} />);\r\n      showMd.push(<MyMarkdownView mdInfo={mdFileToShow} />);\r\n    } else {\r\n      showDrawer.push(<DrawerMenu classesToUse={classes} menuItems={menuStructure} selectCb={this.itemSelectedCb} />);\r\n      mdFileToShow = this.state.mdFilesContent.find((mdFileContent) => (mdFileContent.name === this.state.mdSelected));\r\n      if (mdFileToShow !== undefined) {\r\n        showMd.push(<MyMarkdownView mdInfo={mdFileToShow} />);\r\n      } else {\r\n        mdFileToShow = {};\r\n        mdFileToShow.name = \"\";\r\n        mdFileToShow.mdContent = \"\";\r\n        mdFileToShow.mdPath = \"\";\r\n      }\r\n      // console.log('Multiple files is not implemented yet');\r\n    }\r\n\r\n    /*drawers */\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              {mdFileToShow.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {showDrawer}\r\n        <div className={classes.content}>\r\n          <SnackbarProvider maxSnack={3}>\r\n            <div className={classes.toolbar} />\r\n            {showMd}\r\n          </SnackbarProvider>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainScreen)\r\n","import React from 'react';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport {blue,pink} from '@material-ui/core/colors';\r\nimport MainScreen from './components/MainScreen';\r\nimport 'typeface-roboto';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    fontFamily: [\r\n      'Arial'\r\n    ].join(','),\r\n    color:'#39A9DC'\r\n  },\r\n  palette: {\r\n    primary: blue,\r\n    secondary: pink,\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider\r\n      theme={theme}>\r\n\r\n      <div className=\"App\">\r\n        <MainScreen />\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}